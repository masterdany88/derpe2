<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<groupId>pl.korbeldaniel</groupId>
	<artifactId>erpe</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>Erpe</name>

	<properties>
		<errai.version>4.1.0-SNAPSHOT</errai.version>
		<gwt.version>2.8.1</gwt.version>
		<elemental2.version>1.0.0-beta-1</elemental2.version>
		<slf4j.version>1.5.11</slf4j.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<errai.dev.context>${project.artifactId}</errai.dev.context>
		<as.version>10.0.0.Final</as.version>
		<!-- Add the absolute path for $JBOSS_HOME below to manage another instance -->
		<errai.jboss.home>${project.build.directory}/wildfly-${as.version}</errai.jboss.home>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<gwt.compile.user.agent>ie8,ie9,ie10,gecko1_8,safari</gwt.compile.user.agent>
		
	</properties>

	<repositories>
		<repository>
			<id>jboss</id>
			<name>JBoss Public Repo</name>
			<url>https://repository.jboss.org/nexus/content/groups/public</url>
		</repository>
		<repository>
			<id>sonatype-public</id>
			<name>Sonatype Public Snapshots Repo</name>
			<url>https://oss.sonatype.org/content/repositories/public</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.errai.bom</groupId>
				<artifactId>errai-bom</artifactId>
				<version>${errai.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-user</artifactId>
				<version>${gwt.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-dev</artifactId>
				<version>${gwt.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.elemental2</groupId>
				<artifactId>elemental2-dom</artifactId>
				<version>${elemental2.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-javaee-all</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-cordova</artifactId>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.0.0-M3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>pl.pragmatists</groupId>
			<artifactId>JUnitParams</artifactId>
			<version>1.0.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-cdi-jboss</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.errai</groupId>
			<artifactId>errai-cdi-server</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.elemental2</groupId>
			<artifactId>elemental2-dom</artifactId>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<outputDirectory>src/main/webapp/WEB-INF/classes</outputDirectory>

		<filters>
			<!-- Ensures that the config.properties file is always loaded from the 
				configuration directory of the active Maven profile. -->
			<filter>profiles/${build.profile.id}/config.properties</filter>
		</filters>
		<resources>
			<!-- Placeholders that are found from the files located in the configured 
				resource directories are replaced with the property values found from the 
				profile specific configuration file. -->
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>gwt-maven-plugin</artifactId>
										<versionRange>[2.4.0,)</versionRange>
										<goals>
											<goal>resources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<skip />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.1,)</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${gwt.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<logLevel>INFO</logLevel>
					<noServer>false</noServer>
					<!-- Configuration for Errai's JBossLauncher. This launcher controls 
						a Wildfly instance in a separate JVM. It's configuration is more complex 
						but useful if you encounter classloading issues using the embedded launcher. -->
					<!--extraJvmArgs>-Xmx2048m -XX:CompileThreshold=7000 -Derrai.jboss.home=${errai.jboss.home} 
						-Derrai.dev.context=${errai.dev.context} -Derrai.jboss.javaopts="-Derrai.jboss.javaagent.path=${settings.localRepository}/org/jboss/errai/errai-client-local-class-hider/${errai.version}/errai-client-local-class-hider-${errai.version}.jar</extraJvmArgs> 
						<server>org.jboss.errai.cdi.server.gwt.JBossLauncher</server -->

					<!-- Errai's embedded WildFly launcher can be used to simplify IDE run 
						configs as server-side code can then be debugged directly (without needing 
						to set up a remote debugger) -->
					<!-- Errai will automatically skip deployment for classes under /client/local 
						to avoid class loading problems for classes that are not needed on the server. 
						To configure an alternative package filter for client-only classes, specify: 
						-Derrai.client.local.class.pattern=.*/myproject/client/.* -->
					<extraJvmArgs>-Xmx2048m -XX:CompileThreshold=7000
						-Derrai.jboss.home=${errai.jboss.home}
						-Derrai.dev.context=${errai.dev.context}</extraJvmArgs>
					<server>org.jboss.errai.cdi.server.gwt.EmbeddedWildFlyLauncher</server>
					<disableCastChecking>true</disableCastChecking>
					<runTarget>${errai.dev.context}/</runTarget>
					<soyc>false</soyc>
					<hostedWebapp>src/main/webapp</hostedWebapp>
					<strict>true</strict>
					<compileReport>true</compileReport>
					<saveSource>true</saveSource>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-user</artifactId>
						<version>${gwt.version}</version>
					</dependency>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-dev</artifactId>
						<version>${gwt.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>${basedir}</directory>
							<includes>
								<include>src/main/webapp/app/</include>
								<include>src/main/webapp/WEB-INF/deploy/</include>
								<include>src/main/webapp/WEB-INF/lib/</include>
								<include>.errai/</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<!-- Unpack jboss-as from maven. Remove this if you wish to use your own 
				jboss/wildfly instance. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>process-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.jboss.errai</groupId>
									<artifactId>wildfly-dist</artifactId>
									<version>${as.version}</version>
									<type>zip</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>




			<!-- Adds source and resource directories to our build -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<!-- Add a new source directory to our build -->
					<execution>
						<id>add-integration-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<!-- Configures the source directory of our integration tests -->
							<sources>
								<source>src/integration-test/java</source>
							</sources>
						</configuration>
					</execution>
					<!-- Add a new resource directory to our build -->
					<execution>
						<id>add-integration-test-resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<!-- Configures the resource directory of our integration tests -->
							<resources>
								<!-- Placeholders that are found from the files located in the configured 
									resource directories are replaced with the property values found from the 
									profile specific configuration file. -->
								<resource>
									<filtering>true</filtering>
									<directory>src/integration-test/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Runs unit tests -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19</version>
				<configuration>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<!-- Excludes integration tests when unit tests are run -->
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>1.0.0-M3</version>
					</dependency>
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>5.0.0-M3</version>
					</dependency>
					<dependency>
						<groupId>org.junit.vintage</groupId>
						<artifactId>junit-vintage-engine</artifactId>
						<version>4.12.0-M3</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- Runs integration tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.18</version>
				<executions>
					<!-- Invokes both the integration-test and the verify goals of the Failsafe 
						Maven plugin -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Skips integration tests if the value of skip.integration.tests 
								property is true -->
							<skipTests>${skip.integration.tests}</skipTests>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>gwt-maven-plugin</artifactId>
						<version>${gwt.version}</version>
						<configuration>
							<draftCompile combine.self="override">true</draftCompile>
							<optimizationLevel combine.self="override">0</optimizationLevel>
							<disableCastChecking combine.self="override">false</disableCastChecking>
							<disableClassMetadata combine.self="override">false</disableClassMetadata>
							<style>DETAILED</style>
							<logLevel>INFO</logLevel>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<!-- Specifies the build.profile.id property that must be equal than 
					the name of the directory that contains the profile specific configuration 
					file. Because the name of the directory that contains the configuration file 
					of the development profile is dev, we must set the value of the build.profile.id 
					property to dev. -->
				<build.profile.id>dev</build.profile.id>
				<!-- Only unit tests are run when the development profile is active -->
				<skip.integration.tests>true</skip.integration.tests>
				<skip.unit.tests>false</skip.unit.tests>
				<gwt.compile.user.agent>gecko1_8</gwt.compile.user.agent>
			</properties>
		</profile>
		<profile>
			<id>integration-test</id>
			<properties>
				<!-- Specifies the build.profile.id property that must be equal than 
					the name of the directory that contains the profile specific configuration 
					file. Because the name of the directory that contains the configuration file 
					of the integration-test profile is integration-test, we must set the value 
					of the build.profile.id property to integration-test. -->
				<build.profile.id>integration-test</build.profile.id>
				<!-- Only integration tests are run when the integration-test profile 
					is active -->
				<skip.integration.tests>false</skip.integration.tests>
				<skip.unit.tests>true</skip.unit.tests>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<!-- Specifies the build.profile.id property that must be equal than 
					the name of the directory that contains the profile specific configuration 
					file. Because the name of the directory that contains the configuration file 
					of the integration-test profile is integration-test, we must set the value 
					of the build.profile.id property to integration-test. -->
				<build.profile.id>prod</build.profile.id>
				<!-- Only integration tests are run when the integration-test profile 
					is active -->
				<skip.integration.tests>false</skip.integration.tests>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>
		<profile>
			<id>wildfly</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.2</version>
						<configuration>
							<packagingExcludes>**/javax/**/*.*,**/client/local/**/*.class</packagingExcludes>
							<outputFileNameMapping>@{artifactId}@-@{baseVersion}@@{dashClassifier?}@.@{extension}@</outputFileNameMapping>
							<webResources>
								<resource>
									<directory>${basedir}/target/extra/app/src</directory>
									<targetPath>src</targetPath>
								</resource>
								<resource>
									<directory>${basedir}/target/extra/app/symbolMaps</directory>
									<includes>
										<include>*.json</include>
									</includes>
									<targetPath>src</targetPath>
								</resource>
							</webResources>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<version>1.0.2.Final</version>
						<extensions>false</extensions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.jboss.errai</groupId>
					<artifactId>errai-jboss-as-support</artifactId>
				</dependency>

				<dependency>
					<groupId>com.google.guava</groupId>
					<artifactId>guava-gwt</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>dom4j</groupId>
					<artifactId>dom4j</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>hsqldb</groupId>
					<artifactId>hsqldb</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>javax.enterprise</groupId>
					<artifactId>cdi-api</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>javax.inject</groupId>
					<artifactId>javax.inject</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>javax.validation</groupId>
					<artifactId>validation-api</artifactId>
					<classifier>sources</classifier>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>javax.validation</groupId>
					<artifactId>validation-api</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.hibernate.common</groupId>
					<artifactId>hibernate-commons-annotations</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-core</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-entitymanager</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-validator</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-validator</artifactId>
					<classifier>sources</classifier>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.errai</groupId>
					<artifactId>errai-cdi-jboss</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.errai</groupId>
					<artifactId>errai-codegen-gwt</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.errai</groupId>
					<artifactId>errai-data-binding</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.errai</groupId>
					<artifactId>errai-javax-enterprise</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.errai</groupId>
					<artifactId>errai-jaxrs-client</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.errai</groupId>
					<artifactId>errai-jpa-client</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.errai</groupId>
					<artifactId>errai-navigation</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.errai</groupId>
					<artifactId>errai-tools</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.errai</groupId>
					<artifactId>errai-ui</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.errai</groupId>
					<artifactId>errai-html5</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.logging</groupId>
					<artifactId>jboss-logging</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.spec.javax.interceptor</groupId>
					<artifactId>jboss-interceptors-api_1.2_spec</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.spec.javax.transaction</groupId>
					<artifactId>jboss-transaction-api_1.2_spec</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.netty</groupId>
					<artifactId>netty-codec-http</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>

	</profiles>
</project>
